Свойства localStorage и sessionStorage объекта Window ссылаются на
объекты Storage. Объект Storage ведет себя во многом похоже на обыкновенный
объект JavaScript за исключением описанных ниже моментов

• Значения свойств объектов Storage обязаны быть строками.
• Свойства, сохраненные в объекте Storage, постоянны. Если вы устанавливаете
какое-то свойство объекта localStorage, после чего пользователь
перезагружает страницу, то значение, сохраненное вами в этом свойстве,
по-прежнему будет доступно вашей программе.

Вот как можно использовать объект localStorage:

let nаше = localStorage.username; // Запросить сохраненное значение,
if (!name) {
  nаmе = prompt ("What is your паше?”); // Задать пользователю вопрос насчет его имени.
  localStorage.username = name; // Сохранить ответ пользователя.
}

Вы можете применять операцию delete для удаления свойств из объектов
localStorage и sessionStorage, а также применять цикл for/in или
Object.keys() для перечисления свойств объекта Storage. Если вы хотите
удалить все свойства из объекта хранилища, тогда вызовите метод clear():

localStorage.clear();

В объектах хранилища также определены методы getItem(), setItem() и
deleteItem(), которые вы при желании можете использовать вместо прямого
доступа к свойствам и операции delete.
Имейте в виду, что свойства объектов Storage способны хранить только
строки. Если вы хотите сохранять и извлекать другие разновидности данных, то
должны кодировать и декодировать их самостоятельно.
Например:
-
// Когда вы сохраняете число, оно преобразуется в строку автоматически.
// Не забывайте разбирать его после извлечения из хранилища.
localStorage.х = 10;
let х = parseInt(localStorage.х);
-
// Преобразовать объект Date в строку при установке
// и разобрать его при получении.
localStorage.lastRead = (new Date()) .toUTCString();
let lastRead = new Date(Date.parse(localStorage.lastRead));

// JSON обеспечивает удобное кодирование для любых
// элементарных типов или структур данных.
localStorage.data = JSON.stringify(data); //Закодировать и сохранить,
let data = JSON.parse(localStorage.data); // Извлечь и декодировать.

- - - События хранилища
Всякий раз, когда хранящиеся в localStorage данные изменяются, браузер
Инициирует событие "storage" в любом другом объекте Window, где изменя-
емые данные видны (но не в окне, которое вносит изменение). Если в браузере
открыты две вкладки, отображающие страницы с одинаковым источником, и
одна из страниц сохраняет значение в localStorage, то другая вкладка получит
событие "storage".

Обработчик для событий "storage" регистрируется либо установкой свойства
window.onstorage, либо вызовом метода window.addEventListener() с
типом события "storage" .
Объект события, ассоциированный с событием "storage" , имеет ряд важных
свойств.
• key. Имя или ключ элемента, который был установлен или удален. Если
вызывался метод clear(), тогда это свойство будет равно null.
• newValue. Содержит в себе новое значение элемента при его наличии.
Если вызывался метод removeltem(), тогда это свойство не будет присутствовать.
• oldValue. Содержит в себе старое значение существующего элемента,
который был изменен или удален. Если добавляется новое свойство (без
старого значения), тогда это свойство не будет присутствовать в объекте
события.
• storageArea. Объект Storage, который изменяется. Обычно это объект localStorage.
• url. URL (в виде строки) документа, чей сценарий изменил это хранилище.






