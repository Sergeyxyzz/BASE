let sum = 0 ;
for (let i of [1,2,3]) { // Однократный проход по каждому значению
sum += i;
}
sum // => 6

Итераторы также можно применять с операцией ... для расширения или
“распространения” итерируемого объекта в инициализаторе массива или в вызове
функции

let chars = [..."abсd"]; // chars = ["a", "b", "c", "d"]
let data = [1, 2, 3, 4, 5];
Math.max(...data) // => 5

Итераторы можно использовать в деструктурирующем присваивании:
let purpleHaze = Uint8Array.of(255, 0, 255, 128);
let [r, g, b, a] = purpleHaze; // a == 128

При выполнении итерации по объекту Мар возвращаемыми значениями будут пары [ключ, значение], которые хорошо сочетаются с деструктурирую-
щим присваиванием в цикле for/o f :
let m = new Map([["one", 1], ["two", 2]]);
for(let [k,v] of m) console.log(k, v); // Выводится 'one 1' и 'two 2'

