let о = { х: 1, у: 2, z: 3 };
let keys = '';
for(let k of Object.keys(o)) {
  keys += k;
}
keys // => "xyz"

Прием работает, поскольку метод Object.keys() возвращает массив имен
свойств для объекта, а массивы допускают итерацию с помощью for/of. Также
имейте в виду, что итерация по ключам объекта не выполняется вживую, как
было ранее в примере с массивом — изменения, внесенные в объект о внутри
тела цикла, не оказывают никакого влияния на итерацию. Если вас не интересуют
ключи объекта, тогда можете организовать проход по значениям, соответствующим
ключам:
let sum = 0;
for(let v of Object.values(о)) {
    sum += v;
}
sum // => 6

А если вам нужны и ключи, и значения свойств объекта, то можете применить
цикл for/of с методом Object.entries() и деструктурирующее присваивание:

let pairs = ''
for(let [k, v] of Object.entries(o)) {
    pairs += k + v; // где k (ключ) и v (значение) каждое отдельное при каждой итерацияя а-ля  forEach()
}
pairs // => "x1y2z3"

Метод Object.entries() возвращает массив массивов, где каждый внутренний
массив представляет пару “ключ/значение” для одного свойства объекта.
Мы используем в примере кода деструктурирующее присваивание для распаковки
таких внутренних массивов в две индивидуальные переменные.