let s = "Hello, world"; // Начать с некоторого текста.
// Получение порций строки
s.substring(l,4) // => "ell": 2-й, 3-й и 4-й символы
s.slice (1,4) // => "ell": то же самое
s.slice(-3) // => "rld": последние 3 символа
s.split(", ") // => ["Hello", "world"]: разбивает по строке разделителя


// Поиск в строке
s.indexOf("1") // => 2: позиция первой буквы 1
s.indexOf("1", 3) // => 3: позиция первой буквы 1, начиная с 3-й позиции
s.indexOf("zz") // => -1: s не включает подстроку "zz"
s.lastlndexOf("1") // => 10: позиция последней буквы 1


// Булевские функции поиска в ES6 и последующих версиях
s.startsWith("Hell") // => true: строка начинается с этого
s.endsWith("!") // => false: s не оканчивается этим
s.includes("or") // => true: s включает подстроку "or"


/ / Создание модифицированных версий строки
s.replace("Но", "уа") // => "Heya, world"
s.toLowerCase() // => "hello, world"
s.toUpperCase() // => "HELLO, WORLD"
s.normalize // Нормализация Unicode NFC (Normalization Form C) : ES6


// Инспектирование индивидуальных (16-битных) символов строки
s.char At (0) // => "Н": первый символ
s.char At (s . length-1) // => "d": последний символ
s.charCodeAt (0) // => 72: 16-битное число в указанной позиции
s.codePointAt (0) // => 72: ES6, работает с кодовыми точками > 16 бит


// функции дополнения строк в ES2017
”х” .padStart (3) // => " х": добавляет пробелы слева до длины 3
"x".padEnd(3) // => "х ” : добавляет пробелы справа до длины 3
"х".padStart (3, "*") // => "**хи: добавляет звездочки слева до длины 3
"x".padEnd(3, "-") // => "х— и: добавляет дефисы справа до длины 3


// Функции усечения пробелов. trim() введена в ES5; остальные в ES2019
и test ".trim() // => "test”: удаляет пробелы в начале и конце
” test ".trimStart () // => "test ” : удаляет пробелы слева. // Также есть trimLeft
" test ”.trimEnd() // => " test” : удаляет пробелы справа. // Также есть trimRight


// Смешанные методы строк
s.concat (” ! ”) // => "Hello, world!” : взамен просто используйте операцию +
'<>'.repeat(5) // => "<><><><><>” : выполняет конкатенацию копий. ES6

